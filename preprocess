#!/usr/bin/env bash

# Usage: ./preprocess bgg_dataset.txt > cleaned_dataset.tsv


if [[ $# -ne 1 ]]; then
  echo "Usage: $0 <input_file>"
  exit 1
fi

input="$1"
if [[ ! -f "$input" ]]; then
  echo "Error: File not found: $input"
  exit 1
fi

# Step 1â€“4: Normalize line endings, convert separator, fix decimals, remove non-ASCII
tmp_cleaned=$(mktemp)
tr -d '\r' < "$input" | \
  sed 's/;/\t/g' | \
  sed 's/\([0-9]\),\([0-9]\)/\1.\2/g' | \
  LC_ALL=C tr -cd '\11\12\15\40-\176\n' > "$tmp_cleaned"

# Step 5: Replace missing /ID values
awk -F'\t' '
BEGIN {
  OFS = "\t"
}
NR == 1 {
  for (i = 1; i <= NF; i++) {
    header[i] = $i
    if ($i == "/ID") id_col = i
  }
  print
  next
}
{
  line[NR] = $0
  for (i = 1; i <= NF; i++) {
    field[NR, i] = $i
  }
  if ($id_col ~ /^[0-9]+$/) {
    if ($id_col + 0 > max_id) {
      max_id = $id_col + 0
    }
  }
  total = NR
}
END {
  new_id = max_id + 1
  for (r = 2; r <= total; r++) {
    if (field[r, id_col] == "") {
      field[r, id_col] = new_id++
    }
    for (i = 1; i <= length(header); i++) {
      printf "%s", field[r, i]
      if (i < length(header)) printf OFS
    }
    printf "\n"
  }
}
' "$tmp_cleaned"

# Cleanup
rm "$tmp_cleaned"

